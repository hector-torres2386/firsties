{"_id":"json-s","_rev":"3-d38f20364ccbb9e0972ca3197b001eaa","name":"json-s","dist-tags":{"latest":"0.1.0"},"versions":{"0.0.1-security":{"name":"json-s","version":"0.0.1-security","description":"security holding package","repository":{"type":"git","url":"git+https://github.com/npm/security-holder.git"},"bugs":{"url":"https://github.com/npm/security-holder/issues"},"homepage":"https://github.com/npm/security-holder#readme","_id":"json-s@0.0.1-security","_npmVersion":"6.4.1","_nodeVersion":"8.2.1","_npmUser":{"name":"ehsalazar","email":"ernie@npmjs.com"},"dist":{"integrity":"sha512-zau4vkQNDPZW/J9R6HwmkMOrwHeqIt3NDXMEV++2nY6MLVhN0bzIFwre4Ara6LYY8G5jMF4rtXN4xeQ3NwrrSw==","shasum":"7cf2ec31c1190c645c860d83d1a4308f8c4df193","tarball":"https://registry.npmjs.org/json-s/-/json-s-0.0.1-security.tgz","fileCount":2,"unpackedSize":466,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAXXeCRA9TVsSAnZWagAAmGkP/2XnPfuAfn/tkVSBk7Fn\nPXDnxs6r5VWyDimOyFl1HbW3vAIKM6w5IJy4wdtuYU+ZaJEfFSbXahnxFjys\nzvjpZUFPMlxe7Mh8DmY/RBqzKM+gaK5JPNq1nizFHur3qczJYkvTxetE/cAu\nQaIzx0HkXEhRjbNaAds7D/pKsB2Hm5c6mOS5MZSk7Sp2PmCDvi/KSbd6SBBH\nQRhk6fEO4xaYi5A77sHBEMbhXbjJritXAkLrzXqYd7fElDmNRmk6Rl6/YQ4l\nhNAH0t7xM5QVLjYF9g56GFN9bR1GtuI7qHYrHt0MHHyHKhtMyBwoefL+9pHd\nqFbtgcahy9MpofkPRhOu/yN+VPZQ+T9x51tpz33zAyqiGmN/fPv/SdTxBvMq\nSFpTsNuM95Srm82ONWnsuwh9MDHIsQJP8PxFuWg9OtGPSc5CWuZU3ug+T9a+\n3fy9vtKOsmiOeLXY2cGFdTZ/qBuK3IQZFbjhwW20rnbTPGYrTwr7fbMoo056\nMjcvUrEnYa+IQN4bMRjDcd/9jhgtxBc8CIfYQpP+IEfIrAg/sPoLaHLnALpw\nxwl1zAjzuslFEk3Hw4L3Calj+0UhbQXPmD3WWiaNMSQq4xnbQASX2KxM5Dgh\n5fxT1rVMgSth2PXsraZYrD4JHroRFhk7IDFejKCC8OeFsOs5tROI1mkMvaQU\nFz4s\r\n=2I67\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDaeomeT2TMNQWZprxVDyPpODOOAL3Gqx50pAl9OIlBBgIgY4wUWz6wEnyGEOyPTU2kkqZHLcKhy6zHKPAcEqoUQ8Y="}]},"maintainers":[{"name":"ehsalazar","email":"ernie@npmjs.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/json-s_0.0.1-security_1543599582029_0.24330363546585532"},"_hasShrinkwrap":false},"0.1.0":{"name":"json-s","version":"0.1.0","description":"Same as JSON but with support for: Date, undefined, NaN, Infinity, and RegExp.","dependencies":{"reassert":"^1.1.19"},"scripts":{"link":"self-import","docs":"mdocs"},"devDependencies":{"@brillout/mdocs":"^0.1.20","lodash.isequal":"^4.5.0","self-import":"^1.0.1"},"repository":{"type":"git","url":"git+https://github.com/brillout/json-s.git"},"gitHead":"1d8bf44a04f4b2988c3cd9ed8cc0cfffcdd20951","bugs":{"url":"https://github.com/brillout/json-s/issues"},"homepage":"https://github.com/brillout/json-s#readme","_id":"json-s@0.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.3.0","_npmUser":{"name":"brillout","email":"npm@brillout.com"},"dist":{"integrity":"sha512-A2rvaJm4ngAKQ0GkQTzG3hJl/MJmCeCuPc2YnLua+CuIjc+O2RbvsU0OI5brqhqw/ceI/2FLsnFtiDZeIcQj8w==","shasum":"d0854713bfb1fe4b7d8ce7bf246e2ad4ba42117d","tarball":"https://registry.npmjs.org/json-s/-/json-s-0.1.0.tgz","fileCount":11,"unpackedSize":9749,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAXaRCRA9TVsSAnZWagAAxSwP/1gf5DJxZMbxUr8wlDud\ngR6I6xuGY+IOqYIR5MkvDVArfX8oFYHCxsvn+Frn/kyN14S1hVU60sq03YLT\ndvgqIWk9BpBnIbIMTugNJ9sZZVvw6cQBufEqeVoRc991Bg4CTvZiwrovdI4W\nhcSdIFWOMc8bR7kmuP+aEbNdZfO5zgLBKOhfFeP2uiApRJL+MsHObHtQaFXI\njj1QL4PUbUD+Or9n5nvpsuK3UwYl+vIbbghzRTIaQnv9d58FkjQf3ZkVtYrl\nS2AJShb7lqKJR/LDOrru8GkmY/pkEuDtGCfMQOPzzTBvoaGEzrfX6naxT1Da\nstgfJu7dY+MnsYVqTvvXiLsdGsQ8xy7YDsXDIHMUPzF7jep49Cfp24sR+wiJ\ngOB4bf20hFLiHrSUHxqT1U/5wN9nWOfPq1ycbr18VDuDnoHUL0L/9PvFKelU\nuv8OC2pX1NgdOk+NcXEH3ZOoOQN8rJqQSuRsHRhL/+PEqgmm/XnmT1t4Z4Oi\nk54PgXL3QhcXLnFciU0cw4l5oSILsjmEKAu+pXVdYOQMGxbV+vkwOZVh6Xdz\nQfiVVsLwPeMylYLeXbJBXJRLVqtwX+124wy3r8v5bRzIfMjAvMmY/42yd8jT\n28G9yz3kd9PO2MuP3Cm7fuaaxmjKqWN58aEQiNodCnRI3O/svu/Ouj55dO0n\neqo/\r\n=93L7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDclBGkmh7vu1fRsYOtlMrZTtQF89rJaD6CLKVwTyf+XwIhAOMLJJZzQZKlsZq8i6bK5vMaS+q5I+u+Cx26Qx9aUMzl"}]},"maintainers":[{"email":"npm@brillout.com","name":"brillout"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/json-s_0.1.0_1543599758629_0.8930798834893099"},"_hasShrinkwrap":false}},"time":{"created":"2018-11-30T17:39:42.029Z","0.0.1-security":"2018-11-30T17:39:42.124Z","modified":"2022-05-06T22:00:44.235Z","0.1.0":"2018-11-30T17:42:38.749Z"},"maintainers":[{"email":"npm@brillout.com","name":"brillout"}],"description":"Same as JSON but with support for: Date, undefined, NaN, Infinity, and RegExp.","homepage":"https://github.com/brillout/json-s#readme","repository":{"type":"git","url":"git+https://github.com/brillout/json-s.git"},"bugs":{"url":"https://github.com/brillout/json-s/issues"},"readme":"<!---\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n-->\n# JSON-S\n\n<i>JSON-<b>S</b>erializer</i>\n\nSame as JSON but with added support for:\n - `Date`\n - `undefined`\n - `NaN`\n - `Inifinity`\n - `RegExp`\n\nJSON is a great serializer.\nBut it is lacking for some JavaScript types such as `Date`:\n\n~~~js\nconst assert = require('assert');\n\nlet obj = {\n  time: new Date('2042-01-01'),\n};\n\n// JSON converts dates to strings\nassert(obj.time.constructor===Date);\nobj = JSON.parse(JSON.stringify(obj));\nassert(obj.time.constructor===String);\nassert(obj.time==='2042-01-01T00:00:00.000Z');\n~~~\n\nWhereas with JSON-S:\n\n~~~js\nconst assert = require('assert');\nconst JSON = require('json-s');\n\nlet obj = {\n  time: new Date('2042-01-01'),\n};\n\n// JSON-S preserves Date\nassert(obj.time.constructor===Date);\nobj = JSON.parse(JSON.stringify(obj));\nassert(obj.time.constructor===Date);\nassert(obj.time.getTime()===new Date('2042-01-01').getTime());\n~~~\n\n<br/>\n\n#### Contents\n\n - [Usage](#usage)\n - [Full Example](#full-example)\n - [How it Works](#how-it-works)\n\n\n<br/>\n\n### Usage\n\n~~~js\n// npm install json-s\nconst parse = require('json-s/parse');\nconst stringify = require('json-s/stringify');\n\nconst obj = {\n  hello: 'from the future',\n  time: new Date('2042-01-01'),\n};\n\n// Serialize with JSON-S\nconst obj_serialized = stringify(obj);\n\n// Deserialize a JSON-S string\nconst obj_deserialized = parse(obj_serialized);\n~~~\n\nThe JSON-S functions `stringify` and `parse` have the exact same interface than `JSON.stringify` and `JSON.parse`.\nSo you can use all JSON's options.\n\n<br/>\n\n### Full Example\n\nExample exposing all differences between JSON and JSON-S.\n\n~~~js\n// /examples/json-s.js\n\nconst assert = require('assert');\n\nconst parse = require('json-s/parse');\nconst stringify = require('json-s/stringify');\n\nconst obj = {\n  date: new Date(),\n  undefined: undefined,\n  NaN: NaN,\n  Infinity: Infinity,\n  regexp: /^\\d+$/g,\n};\n\n// All of `obj` can be serialized with JSON-S\nconst obj2 = parse(stringify(obj))\nassert(obj2.date.getTime()===obj.date.getTime());\nassert(obj2.undefined===undefined && 'undefined' in obj2);\nassert(isNaN(obj2.NaN));\nassert(obj2.Infinity===Infinity);\nassert(obj2.regexp.toString()===obj.regexp.toString());\n\n// JSON cannot serialize any of `obj`\nconst obj3 = JSON.parse(JSON.stringify(obj))\n// JSON converts dates to strings\nassert(obj3.constructor!==Date);\n// JSON removes properties with a value of `undefined`\nassert(!('undefined' in obj3));\n// JSON converts `NaN` to `null`\nassert(obj3.NaN===null);\n// JSON converts `Infinity` to `null`\nassert(obj3.Infinity===null);\n// JSON converts RegExp to an empty object\nassert(obj3.regexp.constructor===Object && Object.keys(obj3.regexp).length===0);\n~~~\n\nTo run the example:\n\n~~~shell\n$ git clone git@github.com:brillout/json-s\n$ cd json-s\n$ npm install\n$ npm run link\n$ node ./examples/json-s.js\n~~~\n\nThe `npm run link` is required to be able to self `require('json-s')`.\n\n<br/>\n\n### How it Works\n\nLet's see how JSON-S serializes an object:\n\n~~~js\n// /examples/inspect.js\n\nconst JSON = require('json-s');\n\nconst obj = {\n  date: new Date(),\n  undefined: undefined,\n  NaN: NaN,\n  Infinity: Infinity,\n  regexp: /^\\d+$/g,\n};\n\n// We use the second argument `2` to have a prettified JSON-S string.\n// (Same as in JSON's `JSON.stringify(obj, undefined, 2)`).\nconsole.log(JSON.stringify(obj, undefined, 2));\n// Prints:\n/*\n{\n  \"date\": \"json-s:tYpE|Date|2018-11-14T17:39:09.245Z\",\n  \"undefined\": \"json-s:tYpE|undefined\",\n  \"NaN\": \"json-s:tYpE|NaN\",\n  \"Infinity\": \"json-s:tYpE|Infinity\",\n  \"regexp\": \"json-s:tYpE|RegExp|/^\\\\d+$/g\"\n}\n*/\n~~~\n\nJSON-S is based on JSON while using prefixed strings for unsupported types.\nThe string `json-s:tYpE` is used as a unique prefix to denote our special strings and make sure that regular strings are not converted.\n\n`json-s` uses the native `JSON.parse` and `JSON.stringify` functions while modifying the serialization of unsupported types.\n\n<!---\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n\n\n\n\n\n\n    WARNING, READ THIS.\n    This is a computed file. Do not edit.\n    Edit `/readme.template.md` instead.\n\n\n\n\n\n\n-->\n","readmeFilename":"readme.md"}